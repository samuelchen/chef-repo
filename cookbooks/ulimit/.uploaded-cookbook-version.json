{"recipes":[{"name":"default.rb","path":"recipes/default.rb","checksum":"5c9bb0291a774837478b7a848541167c","specificity":"default"}],"definitions":[{"name":"user_ulimit.rb","path":"definitions/user_ulimit.rb","checksum":"10df36837d9fb161000b479daec7c879","specificity":"default"}],"libraries":[],"attributes":[{"name":"default.rb","path":"attributes/default.rb","checksum":"2e263b686af4b34a190adc1986b7d495","specificity":"default"}],"files":[],"templates":[{"name":"domain.erb","path":"templates/default/domain.erb","checksum":"84d61bfd86b363d89a223a00002a7e8d","specificity":"default"},{"name":"ulimit.erb","path":"templates/default/ulimit.erb","checksum":"66ae1b3e05b3843cbb12f713d8f54045","specificity":"default"},{"name":"su.erb","path":"templates/default/su.erb","checksum":"38b1a48f1139edb27eec6d200762fce0","specificity":"default"}],"resources":[{"name":"rule.rb","path":"resources/rule.rb","checksum":"4e031b17fbaa5a806f1cbf2bee3e6a4e","specificity":"default"},{"name":"domain.rb","path":"resources/domain.rb","checksum":"8bce795cfbb9f1c75e6e397711855d68","specificity":"default"}],"providers":[{"name":"rule.rb","path":"providers/rule.rb","checksum":"f6e02e34696d59810ba734aeb4bcb0c5","specificity":"default"},{"name":"domain.rb","path":"providers/domain.rb","checksum":"a6c4b8e80d53a492e7312499acea0695","specificity":"default"}],"root_files":[{"name":"metadata.json","path":"metadata.json","checksum":"3d4e47e4d3fe01ad731a813c2e524ae6","specificity":"default"},{"name":"README.md","path":"README.md","checksum":"0db1a2663263ae15f8ef8b88089a97f9","specificity":"default"},{"name":"CHANGELOG.md","path":"CHANGELOG.md","checksum":"60c888758fb579b188bdd6177095c6f6","specificity":"default"}],"metadata":{"name":"ulimit","description":"Installs/Configures ulimit","long_description":"Description\n===========\n\nThis is a short-and-simple cookbook to provide a user_ulimit resource for overriding various ulimit settings. It places configured templates into /etc/security/limits.d/, named for the user the ulimit applies to.\n\nIt also provides a helper recipe (default.rb) for allowing ulimit overrides with the 'su' command on Ubuntu, which is disabled by default for some reason.\n\nFinally, it also supplies a more advanced `ulimit_domain` resource, allowing you to configure a complex set of rules beyond those supported by the definition.\n\nRequirements\n============\n\nAdd to your repo, then depend upon this cookbook from wherever you need to override ulimits. (If you're on Ubuntu, you'll also need to add `recipe[ulimit]` to your runlist, or the files created by this cookbook will be ignored.)\n\nAttributes\n==========\n\n* `node['ulimit']['pam_su_template_cookbook']` - Defaults to nil (current cookbook).  Determines what cookbook the su pam.d template is taken from\n* `node['ulimit']['users']` - Defaults to empty Mash.  List of users with their limits, as below.\n\nUsage\n=====\n\nConsume the user_ulimit resource like so:\n```ruby\nuser_ulimit \"tomcat\" do\n  filehandle_limit 8192 # optional\n  filehandle_soft_limit 8192 # optional; not used if filehandle_limit is set)\n  filehandle_hard_limit 8192 # optional; not used if filehandle_limit is set)\n  process_limit 61504 # optional\n  process_soft_limit 61504 # optional; not used if process_limit is set)\n  process_hard_limit 61504 # optional; not used if process_limit is set)\n  memory_limit 1024 # optional\n  core_limit 2048 # optional\n  core_soft_limit 1024 # optional\n  core_hard_limit 'unlimited' # optional\n  stack_soft_limit 2048 # optional\n  stack_hard_limit 2048 # optional\nend\n```\n\nYou can also define limits using attributes on roles or nodes:\n\n```\n\"default_attributes\": {\n   \"ulimit\": {\n      \"users\": {\n         \"tomcat\": {\n            \"filehandle_limit\": 8193,\n               \"process_limit\": 61504\n             },\n            \"hbase\": {\n               \"filehandle_limit\": 32768\n             }\n       }\n    }\n }\n ```\n\nDomain LWRP\n===========\n\nNote: The `ulimit_domain` resource creates files named after the domain with no modifiers by default. To override this behavior, specify the `filename` parameter to the resource.\n\n```ruby\nulimit_domain 'my_user' do\n  rule do\n    item :nofile\n    type :hard\n    value 10000\n  end\n  rule do\n    item :nofile\n    type :soft\n    value 5000\n  end\nend\n```\n","maintainer":"Brian Hatfield","maintainer_email":"bmhatfield@gmail.com","license":"Apache 2.0","platforms":{},"dependencies":{},"recommendations":{},"suggestions":{},"conflicting":{},"providing":{"ulimit":">= 0.0.0"},"replacing":{},"attributes":{},"groupings":{},"recipes":{"ulimit":""},"version":"0.3.3","source_url":"","issues_url":""},"version":"0.3.3","name":"ulimit-0.3.3","cookbook_name":"ulimit","frozen?":false,"chef_type":"cookbook_version","json_class":"Chef::CookbookVersion"}